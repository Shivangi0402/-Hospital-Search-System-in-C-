#include <stdio.h>
#include <stdlib.h>
#include <string.h>

// Structure to represent a hospital
struct Hospital
{
    char name[50];
    char type[20];
    float rating;
    float pricePerDay;
};

// Function to display hospital details with color
void displayHospital(struct Hospital h)
{
    // Determine color based on rating
    const char *colorCode;
    if (h.rating >= 4.8)
        colorCode = "\033[1;35m"; // Magenta
    else if (h.rating >= 4.5)
        colorCode = "\033[1;32m"; // Green
    else if (h.rating >= 4.0)
        colorCode = "\033[1;33m"; // Yellow
    else
        colorCode = "\033[1;31m"; // Red

    // Print hospital details with color
    printf("%sName: %s\n", colorCode, h.name);
    printf("Type: %s\n", h.type);
    printf("Rating: %.2f\n", h.rating);
    printf("Price per day: Rs. %.2f\n\n\033[0m", h.pricePerDay); // Reset color after printing
}

// Compare function for qsort
int compareHospital(const void *a, const void *b)
{
    const struct Hospital *hospitalA = (struct Hospital *)a;
    const struct Hospital *hospitalB = (struct Hospital *)b;

    // First, compare by rating in descending order
    if (hospitalA->rating > hospitalB->rating)
    {
        return -1;
    }
    else if (hospitalA->rating < hospitalB->rating)
    {
        return 1;
    }
    else
    {
        // If ratings are equal, compare by price per day in descending order
        if (hospitalA->pricePerDay > hospitalB->pricePerDay)
        {
            return -1;
        }
        else if (hospitalA->pricePerDay < hospitalB->pricePerDay)
        {
            return 1;
        }
        else
        {
            return 0;
        }
    }
}

int main()
{
    // Sample hospital data
    struct Hospital hospitals[20] = {
        {"SSG Hospital", "MultiSpecialty", 3.5, 150.0},
        {"Madhuvan Hospital", "Maternity", 4.9, 280.0},
        {"Aadicura Superspeciality Hospital", "MultiSpecialty", 4.7, 200.0},
        {"Aayushya Multispeciality Hospital", "MultiSpecialty", 4.2, 170.0},
        {"Zydus Multispeciality Hospital", "MultiSpecialty", 4.8, 250.0},
        {"Ami Hospital", "Maternity", 4.6, 220.0},
        {"Unity Multispeciality Hospital", "MultiSpecialty", 4.6, 160.0},
        {"VIROC Hospital", "Orthopedic", 4.8, 250.0},
        {"Naisarg Ortho Hospital", "Orthopedic", 4.8, 250.0},
        {"Devdeep Ortho Hospital", "Orthopedic", 3.4, 175.0},
        {"Anusha Orthopedic Hospital", "Orthopedic", 4.6, 230.0},
        {"SUDEEP Hospital", "Orthopedic", 4.5, 185.0},
        {"Prutha Nursing Home", "Maternity", 3.3, 130.0},
        {"Rhythm Heart Institute", "Cardiac", 4.9, 275.0},
        {"Baroda Heart Institute", "Cardiac", 4.8, 250.0},
        {"Pranayam Heart Institute", "Cardiac", 4.7, 230.0},
        {"SAAOL Heart Center", "Cardiac", 4.4, 200.0},
        {"Mom & Me Hospital", "Maternity", 4.6, 220.0},
        {"Srijan Hospital", "Maternity", 5.0, 300.0},
        {"Heart Care Center", "Cardiac", 3.9, 100.0}};

    char userChoice[20];
    float minRating, minPrice;
    int i, found = 0;

    // Get user input for the type of hospital, minimum rating, and minimum price
    printf("Enter the type of hospital (MultiSpecialty/Orthopedic/Cardiac/Maternity): ");
    scanf("%s", userChoice);
    printf("Enter the minimum rating: ");
    scanf("%f", &minRating);
    printf("Enter the minimum price per day: ");
    scanf("%f", &minPrice);

    // Sort hospitals array in descending order based on rating and price per day
    qsort(hospitals, 20, sizeof(struct Hospital), compareHospital);

    // Display hospitals based on user input
    printf("\nHospitals in the area (sorted by rating and price per day):\n");
    for (i = 0; i < 20; i++)
    {
        if (strcmp(hospitals[i].type, userChoice) == 0 && hospitals[i].rating >= minRating && hospitals[i].pricePerDay >= minPrice)
        {
            displayHospital(hospitals[i]);
            found = 1;
        }
    }

    if (!found)
    {
        printf("No hospitals found for the specified criteria.\n");
    }

    return 0;
}
